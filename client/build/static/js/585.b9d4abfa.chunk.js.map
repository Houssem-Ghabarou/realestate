{"version":3,"file":"static/js/585.b9d4abfa.chunk.js","mappings":"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","sources":["components/MobileHeader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { IoMdClose } from \"react-icons/io\";\nimport { FiMenu, FiChevronDown } from \"react-icons/fi\";\nimport useLanguageCurrency from \"./useLanguageCurrency\";\nimport LanguageCurrencySelector from \"./LanguageCurrencySelector\";\nimport { typeOptionsSale, typeOptionsRent } from \"../data/types\";\nconst MobileHeader = ({ type, setProgress }) => {\n  const { t } = useTranslation();\n  const { selected, onChangeLanguage, setselectedCurrency, onChangeCurrency } =\n    useLanguageCurrency();\n\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [showSubMenuRent, setShowSubMenuRent] = useState(false);\n  const [showSubMenu, setShowSubMenu] = useState(false);\n  const toggleOverlay = () => {\n    setShowOverlay((prevState) => !prevState);\n  };\n\n  const handleMenuItemClick = () => {\n    setShowOverlay(false);\n  };\n\n  const handleSubMenuClick = () => {\n    setShowSubMenu(!showSubMenu);\n  };\n\n  const handleSubMenuClickRent = () => {\n    setShowSubMenuRent(!showSubMenuRent);\n  };\n\n  return (\n    <aside>\n      {!showOverlay && <FiMenu className='menu-icon' onClick={toggleOverlay} />}\n      {showOverlay && (\n        <div className='overlay'>\n          <div className='order'>\n            <div className='mobile-language-close'>\n              <LanguageCurrencySelector\n                setProgress={setProgress}\n                type={type}\n                selectedLanguage={selected}\n                onChangeLanguage={onChangeLanguage}\n                selectedCurrency={setselectedCurrency}\n                onChangeCurrency={onChangeCurrency}\n              />\n\n              <IoMdClose\n                className={\n                  type === \"mobile\" ? \"close-menu-mobile\" : \"close-menu\"\n                }\n                onClick={toggleOverlay}\n              />\n            </div>\n\n            <ul className='links'>\n              <li>\n                <Link to='/' onClick={handleMenuItemClick}>\n                  {t(\"header.home\")}\n                </Link>\n              </li>\n              <>\n                <div className='parent-sub-menu'>\n                  <li>\n                    <Link to='/vente' onClick={handleMenuItemClick}>\n                      {t(\"header.sale\")}\n                    </Link>\n                  </li>\n                  <FiChevronDown\n                    className='parent-sub-menu-icon'\n                    onClick={handleSubMenuClick}\n                  />\n                </div>\n\n                {showSubMenu && (\n                  <ul className='sub-menu'>\n                    {typeOptionsSale.map((type) => (\n                      <li key={type}>\n                        <Link\n                          to={`/vente/${type}`}\n                          onClick={handleMenuItemClick}\n                        >\n                          {t(`type.${type}`)}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </>\n              <>\n                <div className='parent-sub-menu'>\n                  <li>\n                    <Link to='/location' onClick={handleMenuItemClick}>\n                      {t(\"header.rent\")}\n                    </Link>\n                  </li>\n                  <FiChevronDown\n                    className='parent-sub-menu-icon'\n                    onClick={handleSubMenuClickRent}\n                  />\n                </div>\n\n                {showSubMenuRent && (\n                  <ul className='sub-menu'>\n                    {typeOptionsRent.map((type) => (\n                      <li key={type}>\n                        <Link\n                          to={`/location/${type}`}\n                          onClick={handleMenuItemClick}\n                        >\n                          {\" \"}\n                          {t(`type.${type}`)}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </>\n              <li>\n                <Link to='/contact' onClick={handleMenuItemClick}>\n                  {t(\"contactezNous\")}\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default MobileHeader;\n"],"names":["_ref","type","setProgress","t","useTranslation","_useLanguageCurrency","useLanguageCurrency","selected","onChangeLanguage","setselectedCurrency","onChangeCurrency","_useState","useState","_useState2","_slicedToArray","showOverlay","setShowOverlay","_useState3","_useState4","showSubMenuRent","setShowSubMenuRent","_useState5","_useState6","showSubMenu","setShowSubMenu","toggleOverlay","prevState","handleMenuItemClick","_jsxs","children","_jsx","FiMenu","className","onClick","LanguageCurrencySelector","selectedLanguage","selectedCurrency","IoMdClose","Link","to","_Fragment","FiChevronDown","typeOptionsSale","map","concat","typeOptionsRent"],"sourceRoot":""}